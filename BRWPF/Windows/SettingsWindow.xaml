<Window x:Name="SettingsView" x:Class="BRWPF.Windows.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:flat="clr-namespace:SolidShineUi;assembly=SolidShineUi"
        xmlns:local="clr-namespace:BRWPF.Windows"
        mc:Ignorable="d"
        Title="BlinkReminder settings" Height="430" Width="500" 
        ResizeMode="NoResize" WindowStartupLocation="CenterScreen" 
        FontSize="13" Background="#FFF8F8F8"
        HorizontalAlignment="Center" VerticalAlignment="Center" >
    
    <Grid >
        <TabControl x:Name="SettingsTabControl" Grid.Column="0" Grid.Row="0">
            <TabItem Header="General">
                <DockPanel x:Name="SettingsPanel" LastChildFill="False" Margin=" 10 0 0 0">

                    <CheckBox x:Name="modeCheckboxTimer" IsChecked="{Binding IsTimerMode, Mode=TwoWay}" IsEnabled="False" 
                              Content="Timer based measurement" 
                              ToolTip="Uses timers which you can add in the tab above"
                              Margin="0 5 0 0" DockPanel.Dock="Top"
                              VerticalAlignment="Center" Background="#FFF8F8F8"/>

                    <CheckBox x:Name="modeCheckboxActivity" IsChecked="{Binding IsActivityMode, Mode=TwoWay}" IsEnabled="False" 
                              Content="Activity based measurement" 
                              ToolTip="Rest are based only mouse and keyboard usage"
                              Margin="0 5 0 0" DockPanel.Dock="Top"
                              VerticalAlignment="Center" Background="#FFF8F8F8"/>

                    <CheckBox x:Name="fullscreenChkbox" IsChecked="{Binding ShouldBreakWhenFullScreen, Mode=TwoWay}" 
                              Content="Full screen application blocks rests" 
                              ToolTip="Skip break if an app hides the taskbar"
                              Margin="0 5 0 0" DockPanel.Dock="Top"
                              VerticalAlignment="Center" Background="#FFF8F8F8"/>

                    <CheckBox x:Name="indefPauseChkbox" IsChecked="{Binding IndefPauseEnabled, Mode=TwoWay}" 
                              Content="Indefinite pause of rests"
                              ToolTip="Pause is on until the resume button is clicked"
                              Margin="0 5 0 0" DockPanel.Dock="Top"
                              VerticalAlignment="Center" Background="#FFF8F8F8"/>

                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="0 5 0 0" DockPanel.Dock="Top">
                        
                        <flat:IntegerSpinner x:Name="defaultPauseLength" Value="{Binding DefaultPauseLength, Mode=TwoWay}"
                                             ToolTip="Default length of pause in the pause window"
                                             Width="50"/>

                        <Label x:Name="pauseLengthLabel" Content="Default pause length" />
                        
                    </StackPanel>
                    

                    <CheckBox x:Name="preNotificationChkbox" IsChecked="{Binding IsNotificationEnabled, Mode=TwoWay}" 
                              Content="Pre-break notifications"
                              ToolTip="Before a break occurs, a notification popup comes up above the taskbar icon"
                              Margin="0 5 0 0" DockPanel.Dock="Top"
                              VerticalAlignment="Center" Background="#FFF8F8F8"/>

                    <CheckBox x:Name="permissiveNotificationChkbox" IsChecked="{Binding IsPermissiveNotification, Mode=TwoWay}" 
                              Content="Permissive notifications"
                              ToolTip="Permissive: Clicking on the popup starts the break. Restrictive: Clicking on the popup dismisses the break."
                              Margin="0 5 0 0" DockPanel.Dock="Top"
                              VerticalAlignment="Center" Background="#FFF8F8F8"/>

                    <CheckBox x:Name="isFullscreenBreakChkBox" IsChecked="{Binding IsFullscreenBreak, Mode=TwoWay}"
                              Content="Full screen breaks"
                              ToolTip="The break will be displayed in a small window on the lower right hand corner of the screen"
                              Margin="0 5 0 0" DockPanel.Dock="Top"
                              VerticalAlignment="Center" Background="#FFF8F8F8"/>

                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="0 5 0 0" DockPanel.Dock="Top">

                        <flat:DoubleSpinner x:Name="scaleControl" Value="{Binding ScalingFactor, Mode=TwoWay}"
                                      Width="50" 
                                      VerticalAlignment="Center" Background="#FFF8F8F8"
                                      MinValue="0.5" MaxValue="1.5" ContentStringFormat="0.0x"
                                      ToolTip="Controls the size of the small screen break window"/>

                        <Label x:Name="scaleLabel" Content="Proportions to scale break window"/>

                    </StackPanel>

                    <StackPanel Orientation="Horizontal" 
                                HorizontalAlignment="Center" VerticalAlignment="Center" 
                                Margin="0 10 0 0" DockPanel.Dock="Bottom">

                        <Button x:Name="SaveBtn" Content="Save" Width="80" 
                            HorizontalAlignment="Center"
                            Margin="0 0 50 10" DockPanel.Dock="Bottom" 
                            Click="SaveButton_Click" />

                        <Button x:Name="CancelBtn" Content="Cancel" Width="80" 
                            HorizontalAlignment="Center"
                            Margin="0 0 0 10" DockPanel.Dock="Bottom" 
                            Click="CancelBtn_Click" />

                    </StackPanel>
                </DockPanel>
            </TabItem>

            <TabItem x:Name="newBreakTab" Header="Add new break" 
                     MouseLeftButtonUp="NewBreakTab_MouseLeftButtonUp"/>

        </TabControl>
    </Grid>
</Window>
